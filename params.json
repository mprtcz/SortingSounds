{
  "name": "Sortingsounds",
  "tagline": "Java application which visualize three different sorting algorythms: bubble sort, quicksort and dual-pivot quicksort, playing a different tone to every comparison it makes while sorting.",
  "body": "# SortingSounds\r\nJava application which visualize three different sorting algorithms: bubble sort, quicksort and array sort, optionally playing a different tone to every comparison it makes while sorting.\r\n\r\nThe application contains 4 controls and a button responsible for the start of visualization.\r\n* Sorting Method ChoiceBox allowing to choose between different sorting algorithms to visualize\r\n* Latency Slider which can be manipulated during runtime allowing the user to change the speed of the animation\r\n* Sample size ChoiceBox which lets the user choose different sizes of an array to be sorted\r\n* Play Sound CheckBox responsible for determining if the sound should be played during visualization\r\n\r\nIn the botton there is a label which informs the user about how many comparisons chosen algorithm had made during sorting. \r\n\r\n\r\n**An example of the application running Bubble sort algorithm:**\r\n\r\n![.gif, 1MB](https://media.giphy.com/media/l41YAOAbwr23GKhRm/giphy.gif)\r\n\r\n\r\n**Quicksort:**\r\n\r\n![.gif, 921kB](https://media.giphy.com/media/l41YaFAS0dmt7dxW8/giphy.gif)\r\n\r\n\r\n**Dual-Pivot Quicksort implemented in Java api as Arrays.sort() method:**\r\n\r\n![.gif, 1,05MB](https://media.giphy.com/media/3oEjHQAh4VOiEZXeKI/giphy.gif)\r\n\r\n\r\n---\r\n\r\nTo generate a jar file of this project using maven:\r\n  1. after cloning the project, open terminal in the project's main directory and type:\r\n\r\n  `mvn package`\r\n  \r\n  2. Next go to generated `target` directory:\r\n  \r\n  `cd target`\r\n  \r\n  3. To run generated jar file enter:\r\n  \r\n  `java -jar SortingSounds.jar`\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}